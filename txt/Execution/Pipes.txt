Pipes : 

    Exemples : ls -l | grep ".c" | wc -l

    Un pipe (ou tube) est un mécanisme permettant de transmettre des informations 
    d’un processus ou d’une commande à une autre. Contrairement à d'autres formes 
    de communication inter-processus (IPC), un pipe établit une communication 
    unidirectionnelle : un processus écrit, l’autre lit.

    Principe : la sortie standard (stdout) d’un programme devient l’entrée standard
    (stdin) d’un autre. Cela permet de chaîner plusieurs commandes pour effectuer 
    des traitements complexes de manière efficace.
    
    Types de pipes sous Linux :
        - Pipes anonymes (Unnamed Pipes)
            -> Utilisés pour la communication entre processus apparentés, souvent au 
                sein d’un même programme.
    
        - Pipes nommés (Named Pipes ou FIFOs)
            -> Permettent également la communication entre processus non apparentés 
                et peuvent être bidirectionnels.

    En général, les pipes anonymes sont unidirectionnels. Pour une communication 
    bidirectionnelle, il faut créer deux pipes : un pour chaque sens de communication.

    Le pipe est représenté par une barre verticale | :
        -> commande1 | commande2 | ... | commandeN

    Chaque commande lit l’entrée fournie par la commande précédente et écrit dans la 
    suivante. Ce mécanisme est souvent utilisé pour filtrer, trier ou transformer des 
    données.

    Pour Minishell :

    Chaque process de la commande saisie par l'utilisateur sera séparer pour être 
    exécuté séparément. La première commande sera exécuter la première commande. Sa 
    sortie sera redirigé vers un pipe. Puis ce pipe sera utilisé comme entrée pour 
    la commande suivante.
    (Répéter l’opération jusqu’à la dernière commande.)

    Ainsi, le tableau des commandes dans Minishell doit refléter cette séparation, 
    chaque pipe indiquant un nouvel enchaînement logique à gérer/ une nouvelle ligne 
    de commande dans notre tableau (char ***) crée lors du parsing.

    Exemples : 
    
    1. Pour la cmd suivante : ls -la | grep src | wc -l
    
    cmd[0] = ["ls", "-la", NULL];
    cmd[1] = ["grep", "src", NULL];
    cmd[2] = ["wc", "-l", NULL];
    cmd[3] = NULL;

    Ici la cmd sans pipe a la forme suivante : cmd[n][n][n]

    2. Pour la cmd suivante : ls -la

     cmd[0] = ["ls", "-la", NULL];
     cmd[1] = NULL;

    Ici la cmd sans pipe a la forme suivante : cmd[0][n][n]

(Piste à suivre)
    Exécution d'une saisie avec plusieurs pipes.
    Exécuter les commandes n'ayant pas besoin d'entrée en premier 
    dans l'ordre de lecture, puis exécuter dans l'ordre les commandes 
    ayant besoin d'une entrée.